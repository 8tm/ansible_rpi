---
# Ustal realnego użytkownika (tego spod sudo). Unikamy 'omit' w expresji.
- name: Ustal realnego użytkownika (ten spod sudo)
  ansible.builtin.set_fact:
    real_user: >-
      {{
        (ansible_env.SUDO_USER | default(None))
        | default(ansible_env.LOGNAME, true)
        | default(ansible_env.USER, true)
        | default(ansible_user_id)
      }}

- name: Pobierz wpis passwd realnego użytkownika (dla katalogu domowego)
  ansible.builtin.getent:
    database: passwd
    key: "{{ real_user }}"

# /etc/passwd ma pola: name, passwd, uid, gid, gecos, dir(HOME), shell
# W Ansible: getent_passwd[user][4] == HOME, getent_passwd[user][5] == shell
- name: Ustal katalog domowy realnego użytkownika
  ansible.builtin.set_fact:
    real_home: >-
      {{
        (getent_passwd[real_user][4]
          | default((real_user == 'root') | ternary('/root', '/home/' ~ real_user)))
      }}

# (Opcjonalnie) sprawdźmy, że real_home wygląda jak ścieżka katalogu a nie np. /bin/bash
- name: Waliduj ustalony real_home
  ansible.builtin.assert:
    that:
      - real_home is string
      - real_home.startswith('/')
      - real_home not in ['/bin/sh', '/bin/bash', '/usr/bin/zsh']
    fail_msg: "Wygląda na to, że real_home nie jest katalogiem: {{ real_home }}"

- name: Upewnij się, że katalog ~/.config/kanshi istnieje
  ansible.builtin.file:
    path: "{{ real_home }}/.config/kanshi"
    state: directory
    owner: "{{ real_user }}"
    group: "{{ real_user }}"
    mode: "0755"

# ZMIANA: jeśli plik nie istnieje, utwórz go z właściwą zawartością (zamiast 'touch')
- name: Utwórz ~/.config/kanshi/config z domyślną zawartością (jeśli brak)
  ansible.builtin.copy:
    dest: "{{ real_home }}/.config/kanshi/config"
    force: true
    owner: "{{ real_user }}"
    group: "{{ real_user }}"
    mode: "0644"
    content: |
      profile {
          output DPI-1 enable mode 480x640@60.000 position 0,0 transform 90
      }

# Wymuś "transform 90" w każdej linii 'output ... transform <0|90|180|270>'
- name: Ustaw transform 90 w kanshi config
  ansible.builtin.replace:
    path: "{{ real_home }}/.config/kanshi/config"
    regexp: '(^\s*output\b[^\n]*?\btransform\s+)(?:0|90|180|270)\b'
    replace: '\g<1>90'
    backup: true

## (Opcjonalnie) Dodaj transform 90, jeśli linia output nie ma transform
#- name: Dodaj transform 90 jeśli brak linii transform w liniach output (opcjonalne)
#  ansible.builtin.lineinfile:
#    path: "{{ real_home }}/.config/kanshi/config"
#    regexp: '^\s*output\b(?!.*\btransform\b).*'
#    line: '\g<0> transform 90'
#    backrefs: true
#  when: false  # ustaw na true, jeśli chcesz wymuszać dodanie przy braku

- name: Skopiuj kanshi config do /etc/xdg/labwc-greeter/config.kanshi
  become: true
  ansible.builtin.copy:
    src: "{{ real_home }}/.config/kanshi/config"
    dest: /etc/xdg/labwc-greeter/config.kanshi
    remote_src: true
    owner: root
    group: root
    mode: "0644"
    backup: true

# (Opcjonalnie) Restart/usypianie kanshi po zmianie – zależnie od sposobu uruchamiania
# - name: Restart kanshi (systemd --user)
#   ansible.builtin.command: "loginctl enable-linger {{ real_user }} && sudo -u {{ real_user }} systemctl --user restart kanshi.service"
#   changed_when: true
#   when: false

# --- LABWC: przygotowanie rc.xml ---

- name: Upewnij się, że katalog ~/.config/labwc istnieje
  ansible.builtin.file:
    path: "{{ real_home }}/.config/labwc"
    state: directory
    owner: "{{ real_user }}"
    group: "{{ real_user }}"
    mode: "0755"

# Utwórz plik z domyślną zawartością tylko jeśli nie istnieje
- name: Utwórz ~/.config/labwc/rc.xml z domyślną zawartością (jeśli brak)
  ansible.builtin.copy:
    dest: "{{ real_home }}/.config/labwc/rc.xml"
    force: true
    owner: "{{ real_user }}"
    group: "{{ real_user }}"
    mode: "0644"
    content: |
      <?xml version="1.0"?>
      <openbox_config xmlns="http://openbox.org/3.4/rc">
          <touch deviceName="11-005d Goodix Capacitive TouchScreen" mapToOutput="DPI-1" mouseEmulation="no"/>
      </openbox_config>

- name: Change mouse mode to multitouch
  ansible.builtin.replace:
    path: "{{ real_home }}/.config/labwc/rc.xml"
    regexp: '(\bmouseEmulation=")(?:yes|no)"'
    replace: '\1no"'
    backup: true

- name: Ustaw właściciela pliku rc.xml na real_user
  ansible.builtin.file:
    path: "{{ real_home }}/.config/labwc/rc.xml"
    owner: "{{ real_user }}"
    group: "{{ real_user }}"
    mode: "0644"

# --- GREETER: /etc/xdg/labwc-greeter ---

- name: Upewnij się, że katalog /etc/xdg/labwc-greeter istnieje
  become: true
  ansible.builtin.file:
    path: /etc/xdg/labwc-greeter
    state: directory
    owner: root
    group: root
    mode: "0755"

- name: Skopiuj rc.xml do /etc/xdg/labwc-greeter/rc.xml
  become: true
  ansible.builtin.copy:
    src: "{{ real_home }}/.config/labwc/rc.xml"
    dest: /etc/xdg/labwc-greeter/rc.xml
    remote_src: true
    owner: root
    group: root
    mode: "0644"
    backup: true
